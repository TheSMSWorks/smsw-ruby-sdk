=begin
#The SMS Works API

#The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed UK messages are refunded.

The version of the OpenAPI document: 1.9.0
Contact: support@thesmsworks.co.uk
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.1.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::OneTimePasswordApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OneTimePasswordApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::OneTimePasswordApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OneTimePasswordApi' do
    it 'should create an instance of OneTimePasswordApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::OneTimePasswordApi)
    end
  end

  # unit tests for otp_messageid_get
  # Retrieve an OTP by it&#39;s message ID
  # @param messageid The ID of the OTP you would like returned
  # @param [Hash] opts the optional parameters
  # @return [OTPVerifyResponse]
  describe 'otp_messageid_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for otp_send_post
  # Generates and sends a One-Time Password
  # @param otp OTP properties
  # @param [Hash] opts the optional parameters
  # @return [OTPResponse]
  describe 'otp_send_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for otp_verify_post
  # Generates and sends a One-Time Password
  # @param passcode One-Time Password
  # @param [Hash] opts the optional parameters
  # @return [OTPVerifyResponse]
  describe 'otp_verify_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
